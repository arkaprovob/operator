kind: "Template"
apiVersion: "v1"
metadata:
  name: "website-content"
labels:
  template: "website-content"
parameters:
  - name: "ENV"
    description: "Environment"
    required: true
  - name: "NAME"
    description: "Name of deployment"
    value: "web"
    required: false

objects:
  - kind: Service
    apiVersion: v1
    metadata:
      name: ${NAME}-content-${ENV}
      labels:
        website: ${NAME}

    spec:
#      type: NodePort
      ports:
        # Expose main container
        - port: 80
          targetPort: 8080
          name: http
        # Expose rest api
        - port: 8090
          name: http-api
      selector:
        app: ${NAME}-content-${ENV}
#  - kind: Route
#    apiVersion: route.openshift.io/v1
#    metadata:
#      name: web-content-api
#    spec:
#      port:
#        targetPort: 8090
#      tls:
#        termination: edge
#      to:
#        kind: Service
#        name: web-content-${ENV}
#        weight: 100
#      wildcardPolicy: None

  - kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: ${NAME}-content-${ENV}
      website: ${NAME}
      labels:
        website: ${NAME}
    spec:
      selector:
        matchLabels:
          app: ${NAME}-content-${ENV}
      replicas: 1
      template:
        metadata:
          labels:
            app: ${NAME}-content-${ENV}
            website: ${NAME}
        spec:
          initContainers:
            # Init data
            - name: init-content
              image: openhybridweb/core-staticcontent
              imagePullPolicy: IfNotPresent
              resources:
                requests:
                  cpu: 100m
                  memory: 100Mi
                limits:
                  cpu: 100m
                  memory: 100Mi
              command: [ 'node', 'init-content.js' ]
              env:
                - name: CONFIG_PATH
                  value: "/app/config/content-config-git.yaml"
                - name: TARGET_DIR
                  value: "/app/data/"
              volumeMounts:
                - mountPath: "/app/config/"
                  name: content-init
                  readOnly: true
                - mountPath: "/app/data/"
                  name: data
          containers:
            # Main container to serve data
            - name: httpd
              image: "spaship/httpd"
              imagePullPolicy: IfNotPresent
              resources:
                requests:
                  cpu: 100m
                  memory: 100Mi
                limits:
                  cpu: 100m
                  memory: 100Mi
              ports:
                - containerPort: 8080
              volumeMounts:
                # ROOT context - Make available only _root component
                - mountPath: "/var/www/html/"
                  name: data
                  subPath: _root
                # Other components outside root and available via Aliases
                - mountPath: "/var/www/components/"
                  name: data
                - mountPath: "/etc/httpd/conf.d/custom/"
                  name: content-httpd
            # Side car container providing API
            - name: api
              image: quay.io/websitecd/content-git-api
              imagePullPolicy: IfNotPresent
              livenessProbe:
                httpGet:
                  path: "/"
                  port: 8090
                initialDelaySeconds: 2
                failureThreshold: 10
                periodSeconds: 10
              readinessProbe:
                httpGet:
                  path: "/"
                  port: 8090
                initialDelaySeconds: 2
                failureThreshold: 5
                periodSeconds: 10
              resources:
                requests:
                  cpu: 100m
                  memory: 50Mi
              ports:
                - containerPort: 8090
              env:
                - name: APP_DATA_DIR
                  value: "/app/data/"
              volumeMounts:
                - mountPath: "/app/data/"
                  name: data
          volumes:
            - name: content-init
              secret:
                secretName: ${NAME}-content-init-${ENV}
            - name: content-httpd
              secret:
                secretName: ${NAME}-content-httpd-${ENV}
            - name: data
              emptyDir: { }
